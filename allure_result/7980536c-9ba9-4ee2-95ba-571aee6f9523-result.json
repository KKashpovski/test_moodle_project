{"name": "test_auth_valid_data", "status": "failed", "statusDetails": {"message": "AssertionError: We are not auth\nassert False\n +  where False = <bound method LoginPage.is_auth of <pages.login_page.LoginPage object at 0x000001E491E56AF0>>()\n +    where <bound method LoginPage.is_auth of <pages.login_page.LoginPage object at 0x000001E491E56AF0>> = <pages.login_page.LoginPage object at 0x000001E491E56AF0>.is_auth\n +      where <pages.login_page.LoginPage object at 0x000001E491E56AF0> = <pages.application.Application object at 0x000001E491E56DC0>.login", "trace": "self = <auth.test_auth.TestAuth object at 0x000001E491E55220>, app = <pages.application.Application object at 0x000001E491E56DC0>\n\n    @allure.feature(\"authorisation\")\n    @allure.story(\"проверка на ввод существующего пользователя\")\n    def test_auth_valid_data(self, app):\n        \"\"\"\n        Steps\n        1. Open main page\n        2. Auth with valid data\n        3. Check auth result\n        \"\"\"\n        app.open_auth_page()\n        data = AuthData(login=\"kudimovaks@yandex.ru\", password=\"Capita_12\")\n        app.login.auth(data)\n        # with allure.step(\"Делаем скриншот\"):\n        #     allure.attach(app.personal_data.make_screenshot(),\n        #                   name=\"Screenshot_valid_data\", attachment_type=AttachmentType.PNG)\n>       assert app.login.is_auth(), \"We are not auth\"\nE       AssertionError: We are not auth\nE       assert False\nE        +  where False = <bound method LoginPage.is_auth of <pages.login_page.LoginPage object at 0x000001E491E56AF0>>()\nE        +    where <bound method LoginPage.is_auth of <pages.login_page.LoginPage object at 0x000001E491E56AF0>> = <pages.login_page.LoginPage object at 0x000001E491E56AF0>.is_auth\nE        +      where <pages.login_page.LoginPage object at 0x000001E491E56AF0> = <pages.application.Application object at 0x000001E491E56DC0>.login\n\ntests\\auth\\test_auth.py:27: AssertionError"}, "description": "\n        Steps\n        1. Open main page\n        2. Auth with valid data\n        3. Check auth result\n        ", "attachments": [{"name": "screenshot", "source": "817b2ca7-4526-4c18-8c3a-657c75568019-attachment.png", "type": "image/png"}, {"name": "log", "source": "e86d0670-6956-4a7a-b2b9-2dd4a0707fb2-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "befb3bbe-ff39-40e9-af7d-c722c8bba65d-attachment.txt", "type": "text/plain"}], "start": 1631105316519, "stop": 1631105320362, "uuid": "b59bbf31-7ddf-443b-be9c-ebaddcd1523e", "historyId": "fcec89ebca5f6daf506231d5c1f7ecc2", "testCaseId": "6cea31328895eceec9c3b31b56935715", "fullName": "tests.auth.test_auth.TestAuth#test_auth_valid_data", "labels": [{"name": "feature", "value": "authorisation"}, {"name": "story", "value": "проверка на ввод существующего пользователя"}, {"name": "tag", "value": "authorisation"}, {"name": "parentSuite", "value": "tests.auth"}, {"name": "suite", "value": "test_auth"}, {"name": "subSuite", "value": "TestAuth"}, {"name": "host", "value": "PC-kashpovski"}, {"name": "thread", "value": "16036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.auth.test_auth"}]}